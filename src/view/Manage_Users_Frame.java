/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.sql.Connection;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.DAO.UserDAO;
import model.User;
/**
 *
 * @author truongmanhtuan
 */
public class Manage_Users_Frame extends javax.swing.JFrame {

    /**
     * Creates new form Manage_Users_Frame
     */
    public Manage_Users_Frame() throws SQLException {
        setTitle("Manage users");
        initComponents();
        displayData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_showUser = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_username = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_password = new javax.swing.JTextField();
        txt_fullname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_email = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_numberphone = new javax.swing.JTextField();
        txt_address = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_dateofbirth = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btn_createUser = new javax.swing.JButton();
        btn_updateUser = new javax.swing.JButton();
        btn_deleteUser = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jcb_gender = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        btn_back = new javax.swing.JButton();

        txt_dateofbirth.setText("mm/dd/yyyy");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1200, 700));
        jPanel1.setLayout(null);

        table_showUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UserId", "Username", "Password", "Fullname", "Email", "PhoneNumber", "Address", "Gender", "DateOfBá»‰th"
            }
        ));
        table_showUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_showUserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_showUser);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(330, 60, 860, 570);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Username");

        txt_username.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        jLabel2.setText("Password");

        txt_password.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        txt_fullname.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        jLabel3.setText("FullName");

        jLabel4.setText("Email");

        txt_email.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        jLabel5.setText("PhoneNumber");

        txt_numberphone.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        txt_address.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        jLabel6.setText("Address");

        jLabel7.setText("Gender");

        txt_dateofbirth.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        jLabel8.setText("DateOfBirth");

        btn_createUser.setBackground(new java.awt.Color(0, 102, 102));
        btn_createUser.setForeground(new java.awt.Color(255, 255, 255));
        btn_createUser.setText("Create User");
        btn_createUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_createUserActionPerformed(evt);
            }
        });

        btn_updateUser.setBackground(new java.awt.Color(0, 102, 102));
        btn_updateUser.setForeground(new java.awt.Color(255, 255, 255));
        btn_updateUser.setText("Update User");
        btn_updateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateUserActionPerformed(evt);
            }
        });

        btn_deleteUser.setForeground(new java.awt.Color(255, 51, 51));
        btn_deleteUser.setText("Delete User");
        btn_deleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteUserActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 0, 11)); // NOI18N
        jLabel9.setText("Select from table to delete");

        jLabel11.setIcon(new javax.swing.ImageIcon("images/icons/user_icon_128.png")); // NOI18N

        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 0, 11)); // NOI18N
        jLabel12.setText("Enter Username to update");

        jcb_gender.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jcb_gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "   ", "male", "female" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(btn_createUser, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_updateUser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_deleteUser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_dateofbirth, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_fullname, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(25, 25, 25)
                        .addComponent(txt_numberphone, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_address, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(jcb_gender, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(90, 90, 90))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel11)
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_fullname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_numberphone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txt_address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jcb_gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txt_dateofbirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_createUser, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_updateUser, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_deleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)))
                .addContainerGap(113, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 330, 700);

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 102, 102));
        jLabel10.setText("Manage customer information");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(440, 10, 360, 30);

        btn_back.setForeground(new java.awt.Color(255, 51, 51));
        btn_back.setText("Back");
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });
        jPanel1.add(btn_back);
        btn_back.setBounds(1070, 650, 105, 32);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        txt_dateofbirth.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (txt_dateofbirth.getText().equals("mm/dd/yyyy")) {
                    txt_dateofbirth.setText("");
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (txt_dateofbirth.getText().isEmpty()) {
                    txt_dateofbirth.setText("mm/dd/yyyy");
                }
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_createUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_createUserActionPerformed
        String fullName = txt_fullname.getText().trim();
        String userName = txt_username.getText().trim();
        String password = txt_password.getText().trim();
        String phoneNumber = txt_numberphone.getText().trim();
        String email = txt_email.getText().trim();
        String address = txt_address.getText().trim();
        String gender = jcb_gender.getSelectedItem().toString().trim();
        String dateOfBirth = txt_dateofbirth.getText().trim();

        StringBuilder errorMessage = new StringBuilder();

        if (fullName.isEmpty() || userName.isEmpty() || password.isEmpty() || phoneNumber.isEmpty() ||
            email.isEmpty() || address.isEmpty() || gender.isEmpty() || dateOfBirth.isEmpty()) {
            errorMessage.append("Please enter complete information!\n");
        }
        // Kiá»ƒm tra tÃ i khoáº£n: chá»‰ chá»©a chá»¯ cÃ¡i vÃ  chá»¯ sá»‘
        if (!userName.matches("^[a-zA-Z0-9]+$")) {
            errorMessage.append("Username can only contain letters and numbers.\n");
        }
        // Kiá»ƒm tra tÃ i khoáº£n khÃ´ng Ä‘Æ°á»£c báº¯t Ä‘áº§u báº±ng "admin"
        if (userName.toLowerCase().startsWith("admin")) {
            errorMessage.append("Username cannot start with 'admin'.\n");
        }
        // Kiá»ƒm tra máº­t kháº©u: Ã­t nháº¥t 8 kÃ½ tá»±, bao gá»“m cáº£ chá»¯ vÃ  sá»‘
        if (!password.matches("^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$")) {
            errorMessage.append("Password must be at least 8 characters long and contain both letters and numbers.\n");
        }

        // Kiá»ƒm tra sá»‘ Ä‘iá»‡n thoáº¡i: pháº£i cÃ³ Ä‘Ãºng 10 chá»¯ sá»‘
        if (!phoneNumber.matches("^\\d{10}$")) {
            errorMessage.append("Phone number must contain exactly 10 digits.\n");
        }
        // Náº¿u cÃ³ lá»—i, hiá»ƒn thá»‹ táº¥t cáº£ lá»—i
        if (errorMessage.length() > 0) {
            JOptionPane.showMessageDialog(this, errorMessage.toString(), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            UserDAO userDAO = new UserDAO();
            if (userDAO.readUser(userName) != null) {
                JOptionPane.showMessageDialog(this, "The account name already exists!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            User newUser = new User(userName, password, fullName, email, phoneNumber, address, gender, dateOfBirth);
            if (userDAO.addUser(newUser)) {
                JOptionPane.showMessageDialog(this, "Registration Successful!", "Successful", JOptionPane.INFORMATION_MESSAGE);
                displayData();
                resetForm();
            } else {
                JOptionPane.showMessageDialog(this, "Registration failed!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Database connection error!", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn_createUserActionPerformed

    private void btn_updateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateUserActionPerformed
        String fullName = txt_fullname.getText().trim();
        String userName = txt_username.getText().trim();
        String password = txt_password.getText().trim();
        String phoneNumber = txt_numberphone.getText();
        String email = txt_email.getText();
        String address = txt_address.getText();
        String gender = jcb_gender.getSelectedItem().toString().trim();
        String dateOfBirth = txt_dateofbirth.getText();

        if (userName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a username!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int selectedRow = table_showUser.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a user to delete!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        userName = table_showUser.getValueAt(selectedRow, 1).toString();

        User user = new User(userName, password, fullName, email, phoneNumber, address, gender, dateOfBirth);
        try {
            UserDAO userDAO = new UserDAO();
            if (userDAO.updateUser(user)) {
                JOptionPane.showMessageDialog(this, "User updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                displayData();
                resetForm();
            } else {
                JOptionPane.showMessageDialog(this, "Failed to update user!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Database error!", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }

    }//GEN-LAST:event_btn_updateUserActionPerformed

    private void btn_deleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteUserActionPerformed
        int selectedRow = table_showUser.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a user to delete!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String userName = table_showUser.getValueAt(selectedRow, 1).toString();
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete the user: " + userName + "?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                UserDAO userDAO  = new UserDAO();
                if (userDAO.deleteUser(userName)) {
                    JOptionPane.showMessageDialog(this, "User deleted successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    displayData();
                    resetForm();
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to delete user!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Database error!", "Error", JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btn_deleteUserActionPerformed

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        this.dispose();
    }//GEN-LAST:event_btn_backActionPerformed

    private void table_showUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_showUserMouseClicked
        int selectedRow = table_showUser.getSelectedRow(); 
        if (selectedRow != -1) {
            txt_username.setText(table_showUser.getValueAt(selectedRow, 1).toString());
            txt_password.setText(table_showUser.getValueAt(selectedRow, 2).toString());
            txt_fullname.setText(table_showUser.getValueAt(selectedRow, 3).toString());
            txt_email.setText(table_showUser.getValueAt(selectedRow, 4).toString());
            txt_numberphone.setText(table_showUser.getValueAt(selectedRow, 5).toString());        
            txt_address.setText(table_showUser.getValueAt(selectedRow, 6).toString());
            jcb_gender.setSelectedItem(table_showUser.getValueAt(selectedRow, 7).toString());
            txt_dateofbirth.setText(table_showUser.getValueAt(selectedRow, 8).toString());
        }
    }//GEN-LAST:event_table_showUserMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_createUser;
    private javax.swing.JButton btn_deleteUser;
    private javax.swing.JButton btn_updateUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jcb_gender;
    private javax.swing.JTable table_showUser;
    private javax.swing.JTextField txt_address;
    private javax.swing.JTextField txt_dateofbirth;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_fullname;
    private javax.swing.JTextField txt_numberphone;
    private javax.swing.JTextField txt_password;
    private javax.swing.JTextField txt_username;
    // End of variables declaration//GEN-END:variables
private void displayData() throws SQLException {
        UserDAO userDAO = new UserDAO();
        try {
            String[][] accounts = userDAO.readAccountsTableData();
            DefaultTableModel model = new DefaultTableModel(accounts, 
                new String[] {"UserId", "Username", "Password", "Fullname", "Email", "PhoneNumber", "Address", "Gender", "DateOfBirth"}) {
                @Override
                // KhÃ´ng cho phÃ©p chá»‰nh sá»­a báº¥t ká»³ Ã´ nÃ o
                public boolean isCellEditable(int row, int column) {
                    return false; 
                }
            };
            table_showUser.setModel(model);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void resetForm() {
        txt_fullname.setText("");
        txt_username.setText("");
        txt_password.setText("");
        txt_numberphone.setText("");
        txt_email.setText("");
        txt_address.setText("");
        jcb_gender.setSelectedIndex(0);
        txt_dateofbirth.setText("mm/dd/yyyy");
    }
}
